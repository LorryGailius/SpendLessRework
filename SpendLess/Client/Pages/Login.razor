@page "/login"
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using SpendLess.Shared
@using SpendLess.Client.Services
@inject AuthenticationService AuthService
@inject NavigationManager NavigationManager
@inject ITransactionService TransactionService

<MudGrid>
    <MudItem xs="12" sm="7">
        <MudPaper Class="pa-4">
            <MudForm @bind-IsValid="@success">
                    <MudTextField @bind-Value="email" T="string" Label="Email" Required="true"
                                  Validation="@(new Func<string, string?>(AuthService.CheckEmail))"/>
                    <MudTextField @bind-Value="password" T="string" Label="Password" HelperText="Password must be at least 8 symbols long, it must c    ontain at least 1 digit, 1 uppercase, 1 lowecase letter and a special symbol."
                                  InputType="InputType.Password"
                                  Validation="@(new Func<string, string?>(AuthService.CheckPassword))" Required="true"/>
                    <div class="d-flex align-center justify-space-between">        
                        <MudButton Href="Register" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Go to registration</MudButton>
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!success)" OnClick="()=>ValidateUser()" Class="ml-auto">Login</MudButton>
                    </div>
            </MudForm>   
        </MudPaper>
    </MudItem>
</MudGrid>
@code {

    private String username = "";
    private String? email = "";
    private String? password = "";
    private bool success;


    private async Task ValidateUser()
    {
        if (await AuthService.ValidateLogin(success, email, username, password)){
            NavigationManager.NavigateTo("");
            await TransactionService.GetTransactions();
        }     
    }
}