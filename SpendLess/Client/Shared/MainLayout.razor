@inherits LayoutComponentBase
@using SpendLess.Client.Services
@using SpendLess.Client.Pages
@inject ISnackbar Snackbar
@inject ITransactionService TransactionService
@inject ILocalStorageService _localStorage
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />


<MudPaper Height="100vh" Style="overflow:hidden; position:relative;">
    <MudDrawerContainer Class="mud-height-full">
        <MudDrawer Style="height: 100%;" @bind-Open="@open" Fixed="false" Elevation="1" Variant="@DrawerVariant.Mini" OpenMiniOnHover="true">
            <MudNavMenu>
                @if (TransactionService.IsAdmin)
                {
                    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.AdminPanelSettings" Href="/admin">Admin Panel</MudNavLink>
                }
                else
                {      
                    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Filled.Home" Href="/">Home</MudNavLink>
                    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Custom.Uncategorized.AlertSuccess" Href="/goals">Goals</MudNavLink>
                    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Filled.Payments" Href="/transactions">Transactions</MudNavLink>
                    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Filled.BarChart" Href="/stats">Statistics</MudNavLink>
                    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.ContactSupport" Href="/support">Support</MudNavLink>
                }
            </MudNavMenu>
        </MudDrawer>
        <AuthorizeView>
            <Authorized>
                <MudMenu Style="position:absolute; top:3%; right:3%;" FullWidth="false" ActivationEvent="@MouseEvent.MouseOver" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopRight">
                    <ActivatorContent>
                        <MudChip Icon="@Icons.Material.Filled.Person" Color="Color.Primary">
                            @TransactionService.UserName
                        </MudChip>
                    </ActivatorContent>
                    <ChildContent>
                        <MudMenuItem @onclick = "NavToProfile"> Profile</MudMenuItem>
                        <MudMenuItem @onclick = "Logout"> Logout </MudMenuItem>

                    </ChildContent>
                </MudMenu>
            </Authorized>
        </AuthorizeView>


        <div class="d-flex justify-center align-center mud-height-full">
            @Body
        </div>

    </MudDrawerContainer>
</MudPaper>



@code
{
    bool open = false;

    void ToggleDrawer()
    {
        open = !open;
    }

    public async void logExceptions(HttpClient client, string str, Exception ex)
    {
        await client.PostAsJsonAsync(str, ex);
    }

    protected override async Task OnInitializedAsync()
    {
        TransactionService.TransactionsChanged += ((source, args) => StateHasChanged());
        TransactionService.PrivelagesChanged += ((source, args) => StateHasChanged());
        if (await _localStorage.GetItemAsStringAsync("token") is not null)
        {
            await TransactionService.GetTransactions(logExceptions);

        }
        TransactionService.GetUserName();
        TransactionService.GetIsAdmin();
    }

    async Task Logout()
    {
        await _localStorage.RemoveItemAsync("token");
        await AuthStateProvider.GetAuthenticationStateAsync();
        TransactionService.IsAdmin = false;
        NavigationManager.NavigateTo("/login");
    }
    void NavToProfile()
    {
        NavigationManager.NavigateTo("/profile");
    }
}

